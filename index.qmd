---
title: "Influenza A H7N9 in China, 2013"
author: "Everlyn Tamayo"
format: dashboard
theme: lux
---

```{r}
# Load packages 
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, outbreaks, bslib, bsicons, shiny, 
               rgeoboundaries, plotly, htmltools, reactable)

# view data
# head(outbreaks::fluH7N9_china_2013)
```

```{r}
# Total Number of Cases

total_cases <- fluH7N9_china_2013 %>% 
  dim() %>% 
  .[1]


# Total Hospitalizations

total_hosp <- fluH7N9_china_2013 %>% 
  filter(!is.na(date_of_hospitalisation)) %>% 
  nrow()

# Total Deaths

total_death <- fluH7N9_china_2013 %>% 
  filter(outcome == "Death") %>% 
  nrow()

```

```{r}
province_summary <- fluH7N9_china_2013 %>% 
  group_by(province) %>% 
  summarise(num_cases = n())

graph1 <- province_summary %>% 
  mutate(tooltip_label = paste(province,
                               num_cases,
                               sep = ": ")) %>% 
  ggplot(aes(y = reorder (province, num_cases),
                       x = num_cases,
                       text = num_cases)) +
  geom_col(fill = "#528fd6" ) + 
  # geom_text(aes(label = num_cases), 
  #           nudge_x = -0.5, 
  #           color = "white"
  #           ) + 
  labs(y = " ", 
       x = "Number of Cases") + 
  theme(legend.position = "none") +
  theme_minimal()

graph2 <- ggplotly(graph1, tooltip = "text")

# #adding a sparkline
# 
# sparkline <- plot_ly(graph2) %>%
#   add_lines(
#     x = num_cases, y = province,
#     color = I("white"), span = I(1),
#     fill = 'tozeroy', alpha = 0.2
#   ) %>%
#   layout(
#     xaxis = list(visible = F, showgrid = F, title = ""),
#     yaxis = list(visible = F, showgrid = F, title = ""),
#     hovermode = "x",
#     margin = list(t = 0, r = 0, l = 0, b = 0),
#     font = list(color = "white"),
#     paper_bgcolor = "transparent",
#     plot_bgcolor = "transparent"
#   ) %>%
#   config(displayModeBar = F) %>%
#   htmlwidgets::onRender(
#     "function(el) {
#       var ro = new ResizeObserver(function() {
#          var visible = el.offsetHeight > 200;
#          Plotly.relayout(el, {'xaxis.visible': visible});
#       });
#       ro.observe(el);
#     }"
#   )

```

```{r results='hide', message=FALSE, warning = FALSE}
pacman::p_load(outbreaks, rgeoboundaries, plotly)

china_map <- rgeoboundaries::gb_adm1("china")

# Check the keys to see if join will be successful
setdiff(province_summary$province, china_map$shapeName)
setdiff(china_map$shapeName, province_summary$province)
# Some work to be done to harmonize these

china_map <- china_map %>%
  # Remove the strings Province, Municipality and Autonomous Region 
  # to allow matching
  mutate(province = str_trim(
    str_remove(shapeName, "Province|Municipality|Autonomous Region")
  ))

# Check if join will work fine
setdiff(province_summary$province, china_map$province)

# Fix Guangdong, which based on a quick Google is actually Guangzhou
china_map <- china_map %>% 
  mutate(province = if_else(province == "Guangzhou", "Guangdong", province)) 
  
# Check again
setdiff(province_summary$province, china_map$province)

# Now join
china_map_joined <- 
  left_join(china_map, province_summary, by = "province") %>% 
  # Create tooltip label 
  mutate(tooltip_label = paste0(province, ": ", num_cases))

china_map_plot <- ggplot(china_map_joined) +
  geom_sf(aes(fill = num_cases, text = tooltip_label)) + 
  theme_void() +
  labs(fill = "Number of Cases") + 
  theme(legend.position = "none")

china_map_plot_ggplotly <- 
  ggplotly(china_map_plot, tooltip = "text")
```

# HOME

## Row 1 {height="25%"}

### Column 1

```{r}
value_box(
  title = "Total Number of Cases",
  value = total_cases,
  showcase = bsicons::bs_icon("Virus"),
  theme = value_box_theme(bg = "#528fd6")
  )
```

### Column 2

```{r}
value_box(
  title = "Total Hospitalizations",
  value = total_hosp,
  showcase = bsicons::bs_icon("Hospital"),
  theme = value_box_theme(bg = "#224773")
)
```

### Column 3

```{r}
value_box(
  title = "Total Deaths",
  value = total_death,
  showcase = bsicons::bs_icon("file-earmark-text"),
  theme = value_box_theme(bg = "#3f71aa")
)
```

## Row 2 {height="75%"}

### Column 1 {width="40%"}

```{r title = "Number of Cases by Province"}
graph2
```

### Column 2 {width="60%"}

```{r title = "Map of Provinces by Number of Cases"}

china_map_plot_ggplotly

```

# DOWNLOAD DATA

```{r}
htmltools::browsable(
  tagList(
    reactable(fluH7N9_china_2013, 
              elementId = "fluH7N9_china_2013-table", 
              searchable = T, 
              filterable = T), 
    
tags$button("Download as CSV", 
            onclick = "Reactable.downloadDataCSV('fluH7N9_china_2013-table')")
  )
)
```




